# This is a basic workflow to help you get started with Actions

name: OS Check - dotnet and msbuild

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/checkout@v3

      - name: Run dotnet --info
        run: dotnet --info
        
      - if: matrix.os == 'windows-latest'
        name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1      
        
      - name: Run msbuild -version
        run: msbuild -version
        #Fixed by adding msbuild to path on windows :D :D worked fine on linux and mac
        #continue-on-error: true        
        
      - if: matrix.os == 'windows-latest'
        name: Check .NET Framework Runtimes
        shell: powershell
        run: |
          #$PSVersionTable
          Install-Module -Name DotNetVersionLister -Scope CurrentUser -Force 
          Import-Module DotNetVersionLister
          Get-STDotNetVersion
       
      #Error: The `add-path` command is disabled. Please upgrade to using Environment Files or opt into unsecure command execution by setting the `ACTIONS_ALLOW_UNSECURE_COMMANDS` environment variable to `true`. For more information see: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/ 
      #- if: matrix.os == 'windows-latest' 
      #  uses: engineerd/configurator@v0.0.1
      #  with:
      #    name: "dotnetversion.exe"
      #    url: "https://github.com/jmalarcon/DotNetVersions/releases/download/v1.0.0/DotNetVersions.zip"
      #    pathInArchive: "DotNetVersions.exe"
          
      #- if: matrix.os == 'windows-latest' 
      #  name: Find .NET Framework Versions in Registry
      #  run: |
      #    dotnetversion -b


      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
